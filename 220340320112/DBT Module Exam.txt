QUE. 1. Create table DEPT with the following structure:-
DEPTNO int(2)
DNAME varchar(15)
LOC varchar(10)
Insert the following rows into the DEPT table:-
10 ACCOUNTING NEW YORK
20 RESEARCH DALLAS
30 SALES CHICAGO
40 OPERATIONS BOSTON

Answer -->>
mysql> create table dept(
    -> deptno int,
    -> dname varchar(15),
    -> loc varchar(10));
Query OK, 0 rows affected (0.10 sec)

mysql> describe dept;
+--------+-------------+------+-----+---------+-------+
| Field  | Type        | Null | Key | Default | Extra |
+--------+-------------+------+-----+---------+-------+
| deptno | int         | YES  |     | NULL    |       |
| dname  | varchar(15) | YES  |     | NULL    |       |
| loc    | varchar(10) | YES  |     | NULL    |       |
+--------+-------------+------+-----+---------+-------+
3 rows in set (0.01 sec)

mysql> insert into dept values(10,"ACCOUNTING","NEW YORK"),
    -> (20,"RESEARCH","DALLAS"),
    -> (30,"SALES","CHICAGO"),
    -> (40,"OPERATIONS","BOSTON");
Query OK, 4 rows affected (0.01 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> select * from dept;
+--------+------------+----------+
| deptno | dname      | loc      |
+--------+------------+----------+
|     10 | ACCOUNTING | NEW YORK |
|     20 | RESEARCH   | DALLAS   |
|     30 | SALES      | CHICAGO  |
|     40 | OPERATIONS | BOSTON   |
+--------+------------+----------+
4 rows in set (0.00 sec)

mysql>

QUE. 2. Create table EMP with the following structure:-
EMPNO int(4)
ENAME varchar(10)
JOB varchar(9)
HIREDATE date
SAL float(7,2)
COMM float(7,2)
DEPTNO int(2)
Insert the following rows into the EMP table:-
7839 KING MANAGER 1991-11-17 5000 NULL 10
7698 BLAKE CLERK 1981-05-01 2850 NULL 30
7782 CLARK MANAGER 1981-06-09 2450 NULL 10
7566 JONES CLERK 1981-04-02 2975 NULL 20
7654 MARTIN SALESMAN 1981-09-28 1250 1400 30
7499 ALLEN SALESMAN 1981-02-20 1600 300 30

mysql> create table emp(
    -> empno int,
    -> ename varchar(10),
    -> job varchar(9),
    -> hiredate date,
    -> sal float(7,2),
    -> comm float(7,2),
    -> deptno int);
Query OK, 0 rows affected, 2 warnings (0.07 sec)

mysql> describe emp;
+----------+-------------+------+-----+---------+-------+
| Field    | Type        | Null | Key | Default | Extra |
+----------+-------------+------+-----+---------+-------+
| empno    | int         | YES  |     | NULL    |       |
| ename    | varchar(10) | YES  |     | NULL    |       |
| job      | varchar(9)  | YES  |     | NULL    |       |
| hiredate | date        | YES  |     | NULL    |       |
| sal      | float(7,2)  | YES  |     | NULL    |       |
| comm     | float(7,2)  | YES  |     | NULL    |       |
| deptno   | int         | YES  |     | NULL    |       |
+----------+-------------+------+-----+---------+-------+
7 rows in set (0.01 sec)

mysql> select * from emp;
+-------+--------+----------+------------+---------+---------+--------+
| empno | ename  | job      | hiredate   | sal     | comm    | deptno |
+-------+--------+----------+------------+---------+---------+--------+
|  7839 | KING   | MANAGER  | 1991-11-17 | 5000.00 |    NULL |     10 |
|  7698 | BLAKE  | CLERK    | 1981-05-01 | 2850.00 |    NULL |     30 |
|  7782 | CLARK  | MANAGER  | 1981-06-09 | 2450.00 |    NULL |     10 |
|  7566 | JONES  | CLERK    | 1981-04-02 | 2975.00 |    NULL |     20 |
|  7654 | MARTIN | SALESMAN | 1981-09-28 | 1250.00 | 1400.00 |     30 |
|  7499 | ALLEN  | SALESMAN | 1981-02-20 | 1600.00 |  300.00 |     30 |
+-------+--------+----------+------------+---------+---------+--------+
6 rows in set (0.00 sec)




Write SELECT statements to achieve the following:-
3. Display all the employees where SAL between 2500 and 5000 (inclusive of both).

mysql> select * from emp
    -> where sal between 2500 and 5000;
+-------+-------+---------+------------+---------+------+--------+
| empno | ename | job     | hiredate   | sal     | comm | deptno |
+-------+-------+---------+------------+---------+------+--------+
|  7839 | KING  | MANAGER | 1991-11-17 | 5000.00 | NULL |     10 |
|  7698 | BLAKE | CLERK   | 1981-05-01 | 2850.00 | NULL |     30 |
|  7566 | JONES | CLERK   | 1981-04-02 | 2975.00 | NULL |     20 |
+-------+-------+---------+------------+---------+------+--------+
3 rows in set (0.01 sec)

mysql>

4. Display all the ENAMEs in descending order of ENAME.

mysql> select ename from emp
    -> order by ename desc;
+--------+
| ename  |
+--------+
| MARTIN |
| KING   |
| JONES  |
| CLARK  |
| BLAKE  |
| ALLEN  |
+--------+
6 rows in set (0.00 sec)

mysql>



5. Display all the JOBs in lowercase

mysql> select lower(job) as "LOWERCASE_JOB" from emp;
+---------------+
| LOWERCASE_JOB |
+---------------+
| manager       |
| clerk         |
| manager       |
| clerk         |
| salesman      |
| salesman      |
+---------------+
6 rows in set (0.01 sec)

mysql>


6. Display the ENAMEs and the lengths of the ENAMEs.

mysql> select ename,length(ename) from emp;
+--------+---------------+
| ename  | length(ename) |
+--------+---------------+
| KING   |             4 |
| BLAKE  |             5 |
| CLARK  |             5 |
| JONES  |             5 |
| MARTIN |             6 |
| ALLEN  |             5 |
+--------+---------------+
6 rows in set (0.00 sec)

mysql>

7. Display the DEPTNO and the count of employees who belong to that DEPTNO .

mysql> select deptno,count(ename) from emp
    -> group by deptno;
+--------+--------------+
| deptno | count(ename) |
+--------+--------------+
|     10 |            2 |
|     30 |            3 |
|     20 |            1 |
+--------+--------------+
3 rows in set (0.00 sec)

mysql>


8. Display the DNAMEs and the ENAMEs who belong to that DNAME.

mysql> select dname,ename from dept,emp
    -> where dept.deptno = emp.deptno;
+------------+--------+
| dname      | ename  |
+------------+--------+
| ACCOUNTING | KING   |
| SALES      | BLAKE  |
| ACCOUNTING | CLARK  |
| RESEARCH   | JONES  |
| SALES      | MARTIN |
| SALES      | ALLEN  |
+------------+--------+
6 rows in set (0.00 sec)

mysql>
9. Display the position at which the string ‘AR’ occurs in the ename.

mysql> select ename, position('AR' in ename) as "AR_POSITION" from emp;
+--------+-------------+
| ename  | AR_POSITION |
+--------+-------------+
| KING   |           0 |
| BLAKE  |           0 |
| CLARK  |           3 |
| JONES  |           0 |
| MARTIN |           2 |
| ALLEN  |           0 |
+--------+-------------+
6 rows in set (0.00 sec)

mysql>




10. Display the HRA for each employee given that HRA is 20% of SAL.

mysql> select ename,sal, sal*0.2 as "HRA" from emp;
+--------+---------+---------+
| ename  | sal     | HRA     |
+--------+---------+---------+
| KING   | 5000.00 | 1000.00 |
| BLAKE  | 2850.00 |  570.00 |
| CLARK  | 2450.00 |  490.00 |
| JONES  | 2975.00 |  595.00 |
| MARTIN | 1250.00 |  250.00 |
| ALLEN  | 1600.00 |  320.00 |
+--------+---------+---------+
6 rows in set (0.00 sec)

mysql>



Section II (10 marks)
1. Write a stored procedure by the name of PROC1 that accepts two varchar strings
as parameters. Your procedure should then determine if the first varchar string 
exists inside the varchar string. For example, if string1 = ‘DAC’ and string2 = 
‘CDAC, then string1 exists inside string2. The stored procedure should insert the 
appropriate message into a suitable TEMPP output table. Calling program for the 
stored procedure need not be written.


mysql> create table tempp(String1 varchar(20),String2 varchar(20),is_Present char(3));

delimiter $$
create procedure proc1(str1 varchar(20),str2 varchar(20))
begin
	if instr(str1,str2) or instr(str2,str1) then
		insert into tempp values(str1,str2,"Yes");
	else
		insert into tempp values(str1,str2,"No");
	end if;
end; $$
delimiter ;

mysql> describe tempp;
+------------+-------------+------+-----+---------+-------+
| Field      | Type        | Null | Key | Default | Extra |
+------------+-------------+------+-----+---------+-------+
| String1    | varchar(20) | YES  |     | NULL    |       |
| String2    | varchar(20) | YES  |     | NULL    |       |
| is_Present | char(3)     | YES  |     | NULL    |       |
+------------+-------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> call proc1("DAC","CDAC");
Query OK, 1 row affected (0.01 sec)

mysql> call proc1("SID","SIDDHANT");
Query OK, 1 row affected (0.01 sec)

mysql> select * from tempp;
+---------+----------+------------+
| String1 | String2  | is_Present |
+---------+----------+------------+
| DAC     | CDAC     | Yes        |
| SID     | SIDDHANT | Yes        |
+---------+----------+------------+
2 rows in set (0.00 sec)

mysql> call proc1("CAD","CDAC");
Query OK, 1 row affected (0.01 sec)

mysql> select * from tempp;
+---------+----------+------------+
| String1 | String2  | is_Present |
+---------+----------+------------+
| DAC     | CDAC     | Yes        |
| SID     | SIDDHANT | Yes        |
| CAD     | CDAC     | No         |
+---------+----------+------------+
3 rows in set (0.00 sec)

mysql>


2. Create a stored function by the name of FUNC1 to take three parameters, the 
sides of a triangle. The function should return a Boolean value:- TRUE if the 
triangle is valid, FALSE otherwise. A triangle is valid if the length of each side is 
less than the sum of the lengths of the other two sides. Check if the dimensions 
entered can form a valid triangle. Calling program for the stored function need not 
be written.

create table output(Side1 float,Side2 float, Side3 float,is_Valid char(5));

delimiter $$
create function func1(s1 float,s2 float, s3 float)
returns boolean
deterministic
begin
	if (s1+s2) > s3 and (s2+s3) > s1 and (s3+s1) > s2 then
		return True;
	else
		return False;
	end if;
end; $$
delimiter ;


delimiter //
create procedure proc2(s1 float,s2 float, s3 float)
begin
	if func1(s1,s2,s3) = True then
		insert into output values(s1,s2,s3,"True");
	else
		insert into output values(s1,s2,s3,"False");
	end if;
end; //
delimiter ;

mysql> call proc2(5,6,3);
Query OK, 1 row affected (0.01 sec)

mysql> select * from output;
+-------+-------+-------+----------+
| Side1 | Side2 | Side3 | is_Valid |
+-------+-------+-------+----------+
|     5 |     6 |     3 | True     |
+-------+-------+-------+----------+
1 row in set (0.00 sec)

mysql> call proc2(80,2,2);
Query OK, 1 row affected (0.01 sec)

mysql> select * from output;
+-------+-------+-------+----------+
| Side1 | Side2 | Side3 | is_Valid |
+-------+-------+-------+----------+
|     5 |     6 |     3 | True     |
|    80 |     2 |     2 | False    |
+-------+-------+-------+----------+
2 rows in set (0.00 sec)

mysql>

		 













